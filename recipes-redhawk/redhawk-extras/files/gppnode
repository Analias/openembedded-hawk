#!/bin/sh

### BEGIN INIT INFO
# Provides:          nodeconfig
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Makes sure a GPP node exists on boot
# Description:       Runs the nodeconfig script at boot and ensures a node exists
#                    
### END INIT INFO

export OSSIEHOME=/usr/lib/redhawk/core
export SDRROOT=/usr/lib/redhawk/sdr
export PYTHONPATH=$OSSIEHOME/lib/python:$OSSIEHOME/lib64/python
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:$OSSIEHOME/bin:$SDRROOT/dev/devices/GPP/python
export LD_LIBRARY_PATH=$OSSIEHOME/lib:$OSSIEHOME/lib64:/usr/lib:/lib:$LD_LIBRARY_PATH

NODENAME=DevMgr_GPP
DevMgrPath=$SDRROOT/dev/nodes/$NODENAME
DOMAIN=REDHAWK_DEV
PIDFILE=/var/run/gppNode.pid
LOGCFG=${SDRROOT}/gppnode.log4cxx

DAEMON_ARGS="-d $DevMgrPath/DeviceManager.dcd.xml --pidfile $PIDFILE --daemon -logcfgfile $LOGCFG"

do_start() {
  if [ -d $DevMgrPath ]
  then
    echo "Node $DevMgrPath already exists, starting existing node"
  else
    SDRROOT=$SDRROOT OSSIEHOME=$OSSIEHOME PYTHONPATH=$PYTHONPATH nodeconfig.py --inplace --domainname=$DOMAIN --nodename=$NODENAME
  fi

  if [ -f $PIDFILE ]; then
    echo "PID file exists. Is the node already running?"
  else
    nodeBooter $DAEMON_ARGS
  fi

}

do_stop() {
  echo "Stopping Device Manager on PID $(cat $PIDFILE)"
  if ! kill $(cat $PIDFILE); then
    echo "Standard kill failed to stop domain manager, escalating!"
    kill -9 $(cat $PIDFILE)
  fi

  rm -f $PIDFILE
}

do_status() {
  if [ -f $PIDFILE ]; then
    echo "I think the Device Manager is running on PID $(cat $PIDFILE)"
  else
    echo "I dont think its running boss"
  fi
}

case "$1" in
  start)
        do_start
        ;;
  stop)
        do_stop
        ;;
  status)
        do_status
        ;;
  reset)
        do_stop
        do_start
        ;;
  *)
        exit 0
        ;;
esac

exit 0

